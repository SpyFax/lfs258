---
- name: "Copy init config file"
  ansible.builtin.template:
    src: kubeadm-config.yaml.j2
    dest: /root/kubeadm-config.yaml
    mode: "0644"

- name: Checked for existing Kubernetes cluster
  ansible.builtin.stat:
    path: "/etc/kubernetes/manifests/etcd.yaml"
  register: cluster_info

- name: Initialize the cluster
  ansible.builtin.command:
    cmd: kubeadm init --config=/root/kubeadm-config.yaml --upload-certs
  when: not cluster_info.stat.exists

- name: "Create .kube directory"
  ansible.builtin.file:
    path: "{{ kube_config }}"
    state: directory
    mode: "0700"
    owner: "{{ ansible_env.SUDO_UID }}"
    group: "{{ ansible_env.SUDO_GID }}"

- name: Check admin.conf file exists.
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_conf

- name: Copy admin.conf to user's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ kube_config }}/config"
    remote_src: true
    owner: "{{ ansible_env.SUDO_UID }}"
    group: "{{ ansible_env.SUDO_GID }}"
    mode: "0600"
  when: k8s_conf.stat.exists

- name: "Install pip"
  ansible.builtin.apt:
    name:
      - python3-pip
      - python-is-python3
      - bash-completion
    state: present
- name: "Install pip packages for ansible kubernetes"
  ansible.builtin.pip:
    name:
      - kubernetes
      - PyYAML
      - jsonpatch
    state: present

- name: Download calico CNI to the cluster.
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
    dest: ~/calico.yaml
    mode: '0664'

- name: Apply calico CNI to the cluster.
  kubernetes.core.k8s:
    state: present
    src: ~/calico.yaml
    kubeconfig: /etc/kubernetes/admin.conf

- name: Download LFS258 example YAML
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.get_url:
    url: "{{ lf258_yaml_file }}"
    url_username: "{{ lf_training_user }}"
    url_password: "{{ lf_training_pw }}"
    checksum: "md5:{{ lf_file_md5 }}"
    mode: "0600"
    dest: "~/LFS258-SOLUTIONS.tar.xz"

- name: Unarchive LFS258-SOLUTIONS
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.unarchive:
    src: "~/LFS258-SOLUTIONS.tar.xz"
    dest: "~"
    remote_src: true
 
- name: Add kubectl autocomplete
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.blockinfile:
    path: "~/.bashrc"
    block: |
      source <(kubectl completion bash)
      alias k=kubectl
      complete -o default -F __start_kubectl k
      cd ~/LFS258/SOLUTIONS/

